<?xml version='1.0'?>
<robot name="camera_model"
 xmlns:xacro="http://www.ros.org/wiki/xacro">    

  <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->
  
  <xacro:property name="half_pi" value="1.570796" />
  
  <xacro:property name="camera_name" value="kinect" />
  
  <xacro:property name="frame_name" value="kinect_frame" />
  
  
  <gazebo reference="camera_link">
    <sensor name="kinect" type="depth">
      <pose>0 0 0 0 ${half_pi} 0</pose>
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.09606677025</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.5</near>
          <far>9</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>kinect</cameraName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>kinect_depth_optical_frame</frameName>
        
        <pointCloudCutoff>0.05</pointCloudCutoff>
        <pointCloudCutoffMax>5</pointCloudCutoffMax>
        
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
      </plugin>
    </sensor>
  </gazebo>
  
  
  <!--gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <pose>0 0 0 0 ${half_pi} 0</pose>
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. ->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
      
      
    </sensor>
    
   </gazebo-->
    
   

  <link name="world" />
  
  <link name="terrain_link" />

     <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="$0 0 0"/>
      <geometry>
    <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <!--visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
      <material name="red"/>
    </visual-->

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
          

    <joint type="fixed" name="r_root">
    
    
      <child link="camera_link"/>
      <parent link="world"/>
    </joint>
    
    <joint type="fixed" name="terrain_joint">
      <child link="terrain_link"/>
      <parent link="world"/>
    </joint>

</robot>
