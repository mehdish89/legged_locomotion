<launch>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

	<include file="$(find gazebo_ros)/launch/empty_world.launch">
    	<arg name="world_name" value="$(find daedalus_gazebo)/worlds/daedalus.world"/>
    	<!-- more default parameters can be changed here -->
	</include>		

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->


  <include file="$(find daedalus_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"  output="screen" args=" -urdf -z 0.0197 -model daedalus -param robot_description" />

    <include file="$(find daedalus_moveit_config)/launch/moveit_controller_manager.launch"/>    
    
    <include file="$(find daedalus_moveit_config)/launch/daedalus_moveit_trajectory_manager.launch"/>
    

    
    <include file="$(find daedalus_moveit_config)/launch/joint_state_controller.launch"/>

  <!-- If needed, broadcast static tf for robot root -->
  
  

  <!-- We do not have a robot connected, so publish fake joint states -->
  <!--node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/> 
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
    <rosparam param="/source_list">[/daedalus/joint_states]</rosparam>
  </node-->


	<!-- <rosparam file="$(find daedalus_gazebo)/controller/joint_state_controller.yaml" command="load"/>
  <node name="joint_state_controller_spawner"  pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/> -->

	

    <!--remap from="/joint_states" to="/daedalus/joint_states" /-->
    
    <!--remap from="/daedalus/controller_manager/load_controller" to="/controller_manager/load_controller" /-->
  
  <!-- Given the published joint states, publish tf for the robot links -->
  <!--node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /-->

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find daedalus_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
    <arg name="allow_trajectory_execution" value="true"/>  
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->


  <include file="$(find daedalus_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>
	



</launch>
